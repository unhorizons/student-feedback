"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[162],{2162:(e,t,a)=>{a.r(t),a.d(t,{default:()=>s});var i=a(6599);class s extends i.Qr{connect(){this.clear(),this.previewClearButtonTarget.addEventListener("click",(()=>this.clear())),this.inputTarget.addEventListener("change",(e=>this.onInputChange(e))),this.dispatchEvent("connect")}clear(){this.inputTarget.value="",this.inputTarget.style.display="block",this.placeholderTarget.style.display="block",this.previewTarget.style.display="none",this.previewImageTarget.style.display="none",this.previewImageTarget.style.backgroundImage="none",this.previewFilenameTarget.textContent="",this.dispatchEvent("clear")}onInputChange(e){const t=e.target.files[0];void 0!==t&&(this.inputTarget.style.display="none",this.placeholderTarget.style.display="none",this.previewFilenameTarget.textContent=t.name,this.previewTarget.style.display="flex",this.previewImageTarget.style.display="none",t.type&&-1!==t.type.indexOf("image")&&this._populateImagePreview(t),this.dispatchEvent("change",t))}_populateImagePreview(e){if("undefined"==typeof FileReader)return;const t=new FileReader;t.addEventListener("load",(e=>{this.previewImageTarget.style.display="block",this.previewImageTarget.style.backgroundImage='url("'+e.target.result+'")'})),t.readAsDataURL(e)}dispatchEvent(e,t={}){this.dispatch(e,{detail:t,prefix:"dropzone"})}}s.targets=["input","placeholder","preview","previewClearButton","previewFilename","previewImage"]}}]);